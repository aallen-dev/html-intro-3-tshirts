@import "../bower_components/normalize-scss/_normalize.scss";
@import "../bower_components/typeplate-starter-kit/css/_typeplate.scss";

@mixin gridify($col, $width, $gutter: 2) {
    @media only screen and (min-width: #{$width}#{"px"}){
        .grid-#{$col}-#{$width} {
            & > * {
                width: #{(100 / $col) - $gutter}#{"%"};
            }
        }
    }
}

/**
 * BOX-SIZING
 */

*, *:before, *:after {
    box-sizing: border-box;
    margin: 0px;
    padding: 0px;
}

/**
 * GRIDS
 */

.grid {
    width: 100%;
    display: block;
    font-size: 0;
    text-align: justify;
    position: relative;

    & > * {
        font-size: medium;
        text-align: left;
        display: inline-block;
        width: 100%;
        vertical-align: top;
    }

    &:after {
        display: inline-block;
        width: 100%;
        content: "";
        font-size: medium;
    }
}

@include gridify(2, 400);
@include gridify(4, 600);

/**
 * GENERAL
 */

body {
    transition: opacity .25s ease;
    font-size:16px;
}

$BGcolor : #f9fcff;
$BGhighlight : #CEF;
$lineColor : #58e;
$textHighlight: #555;


*{
    color:$lineColor;
    font-family: arial;
}



.centerIt{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
// embedding allows for greater flexibility (reuse) with fewer classLabels
.grid1 {

    .grid1Cell{
        max-width:100%;
        background-color:$BGcolor;
        border:4px solid $lineColor;
        margin-bottom: 50px;
        position:relative;
        font-size:16px;
    }
    
    .product{
        display: inline-block;
        position:relative;
        background-color: inherit;
        min-width: 100%;
        height:400px;
        
        .front , .back{
            display:inline-block;
            position:absolute;
            background-color:inherit;
            max-width:100%;
            max-height: 100%;
        }
        .logo{
            max-width: 20%
        }
        .orange{
            z-index: 99999;
            color:orange !important;
        }
        .orange:active ~ .notOrange{
            display:none;
        }
    }

    .rotateTrigger{
        display: none;
    }
    .rotateContainer{
        transition:all .2s linear;
        width:25px;
        height:25px;
        border-left:2px solid $lineColor;
        border-bottom:2px solid $lineColor;
        z-index: 10;
        float:right;
    }
    .curvedarrow {
        z-index: 10;
        display:inline-block;
        width:50px;
        position: absolute;
        right:5px;
        top:8px;
        width: 0;
        height: 0;
        border-top: 9px solid transparent;
        border-right: 9px solid $lineColor;
        -webkit-transform: rotate(10deg);
        -moz-transform: rotate(10deg);
        -ms-transform: rotate(10deg);
        -o-transform: rotate(10deg);
    }
    .rotateContainer:hover > .curvedarrow{
        border-right: 9px solid $BGcolor;
        -webkit-tranform:rotate(90deg)
    }
    .rotateContainer:hover > .curvedarrow:after{
        border-top: 3px solid $BGcolor;
    }
    .rotateContainer:hover{
        background-color:$lineColor;
    }
    .curvedarrow:after {
        content: "";
        position: absolute;
        border: 0 solid transparent;
        border-top: 3px solid $lineColor;
        border-radius: 20px 0 0 0;
        top: -12px;
        left: -9px;
        width: 12px;
        height: 12px;
        -webkit-transform: rotate(45deg);
        -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        -o-transform: rotate(45deg);
    }
    .description , .price{
        font-size: 1.8em;
    }
    .price{
        position:relative;
        display:inline-block;
        position:absolute;
        right:10px;
    }
    .description{
        position:absolute;
        left:10px;
    }

    .grid2{

        .grid2Cell{
            border-top:4px solid $lineColor;
            border-left:4px solid $lineColor;
            max-width:20%;
            text-align: center;

        }

        .orange{
            color:orange;
        }
        .blue{
            color:blue;
        }
        .red{
            color:red;
        }
        .white{
            color:yellow;
        }
        .colorSelector{
            padding:3px;
        }
        .colorSelector:hover{
            cursor:pointer;
            border-radius:5px;
            border:1px solid $lineColor;
        }

        .grid2Cell:first-child{
            border-left:none;
        }
        .grid2Cell:hover{
            transition:all .2s linear;

            color:$BGcolor;
            background-color:$lineColor;
        }
        .grid2Cell:not(:hover){
            transition:all .2s linear;
        }
        i , b , label{
            color:inherit;
        }
        .floatIt{
            visibility: hidden;
            display:inline;
        }
        .floater{
            position:relative;
            left:-20px;
            cursor:pointer;
            color:#f00;
            opacity:0;
        }
        .dropIn > div{
            width:100%;
            cursor:pointer;
            border-bottom: 4px solid $lineColor;
            text-transform: uppercase;
        }
        .dropIn > div:hover{
            transition:all .2s linear;
            color:$BGcolor;
            background-color:$lineColor;
        }
        .dropIn > div:not(:hover){
            transition:all .2s linear;
        }
    }

    @media (min-width: 765px) {
        .grid1Cell {
            width: 45%;
        }
        .description , .price{
            font-size: 1.5em;
        }
    }
    @media (min-width: 1000px) {
        .grid1Cell{
            width: 30%;
        }
        .description , .price{
            font-size: 1.2em;
        }
    }
}


.floatIt:checked ~ .floater{
    -webkit-animation: floatHeart 1s;
}
@-webkit-keyframes floatHeart{
    0%{
        opacity:1;
    }
    100%{
        transform:scale(2) translate(25px , -25px);
        opacity:0;
    }
}
.floatIt:not(:checked) ~ .floater{
    -webkit-animation: floatHeart1 1s;
}
@-webkit-keyframes floatHeart1{
    0%{
        opacity:1;
    }
    100%{
        transform:scale(2) translate(25px , -25px);
        opacity:0;
    }
}

.dropIn {
    display:inline-block;
    position:absolute;
    bottom:220%;
    background-color:$BGcolor;
    padding:15px;
    opacity:0;

    background: $BGcolor;
    border:2px solid $lineColor;
    -moz-border-radius:    10px;
    -webkit-border-radius: 10px;
    border-radius:         10px;

    transform: translate(-50%, 0);
}

.dropIn:before  {
    content:"";
    position: absolute;
    right: 35%;
    top: 100%;
    border: 8px solid;
    border-color: $lineColor transparent transparent $lineColor;
}
.dropIn:after  {
    content:"";
    position: absolute;
    right: 38%;
    top: 100%;
    border: 6px solid;
    border-color: $BGcolor transparent transparent $BGcolor;
}


.grid2Cell:hover > .dropIn{
    -webkit-animation: slideIn .3s ; 
    -webkit-animation-fill-mode: forwards;
}
.grid2Cell:not(:hover) > .dropIn{
    -webkit-animation: slideOut .3s; 
    -webkit-animation-fill-mode: forwards;
}
.dropIn:hover{
    -webkit-animation-play-state: paused !important;
    background: $BGhighlight;
    opacity:1 !important;
    bottom:100%;
}
.dropIn:hover:after{
    border-color: $BGhighlight transparent transparent $BGhighlight;
}


@-webkit-keyframes slideIn{
  0% {
    bottom: 220%;
    display:none;
    opacity:0;
  }
  100% {
    bottom: 100%;
    display:inline-block;
    opacity:1;
  }
}
@-webkit-keyframes slideOut{
  0% {
    display:inline-block;
    bottom: 100%;
    opacity:1;
  }
  99% {
    bottom: 220%;
    opacity:0;
  }
  100%{
    left:-1000%;//this hack prevents 2 features from combining to create an unwanted effect.
  }
}


.rotateTrigger:checked ~ .product{
    -webkit-animation: rotate 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:checked ~ .product .front{
    -webkit-animation: hideFront 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:not(:checked) ~ .product{
    -webkit-animation: rotate1 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:not(:checked) ~ .product .front {
    -webkit-animation: showFront 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:checked ~ .rotateContainer > .rotateArrow{
    transition:all .2s ease-in;
    -webkit-transform-origin: left;
    transform:rotate(180deg);
}
.rotateTrigger:not(:checked) ~ .rotateContainer > .rotateArrow{
    transition:all .2s ease-in;
    transform:rotate(0deg)
}

// @keyframes rotate 
@-webkit-keyframes rotate{
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
// and why cant I reuse an animation??
@-webkit-keyframes rotate1{
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
@-webkit-keyframes hideFront{
  0% {
    visibility: visible;
  }
  50% {
    visibility: visible;
  }
  51%{
    visibility: hidden;
  }
  100% {
    visibility: hidden;
  }
}
@-webkit-keyframes showFront{
  0% {
    visibility: hidden;
  }
  50% {
    visibility: hidden;
  }
  51%{
    visibility: visible;
  }
  100% {
    visibility: visible;
  }
}

