@import "../bower_components/normalize-scss/_normalize.scss";
@import "../bower_components/typeplate-starter-kit/css/_typeplate.scss";

@mixin gridify($col, $width, $gutter: 2) {
    @media only screen and (min-width: #{$width}#{"px"}){
        .grid-#{$col}-#{$width} {
            & > * {
                width: #{(100 / $col) - $gutter}#{"%"};
            }
        }
    }
}

/**
 * BOX-SIZING
 */

*, *:before, *:after {
    box-sizing: border-box;
    margin: 0px;
    padding: 0px;
}

/**
 * GRIDS
 */

.grid {
    width: 100%;
    display: block;
    font-size: 0;
    text-align: justify;
    position: relative;

    & > * {
        font-size: medium;
        text-align: left;
        display: inline-block;
        width: 100%;
        vertical-align: top;
    }

    &:after {
        display: inline-block;
        width: 100%;
        content: "";
        font-size: medium;
    }
}

@include gridify(2, 400);
@include gridify(4, 600);

/**
 * GENERAL
 */

body {
    transition: opacity .25s ease;
    font-size:16px;
}

*{
    border: 1px solid red;
}
$smoothBGColor : white;
.centerIt{
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
// embedding allows for greater flexibility (reuse) with fewer classLabels
.grid1 {

    .grid1Cell{
        max-width:100%;
        background-color:$smoothBGColor;
        border:2px solid green;
        margin-bottom: 50px;
        position:relative;
        font-size:16px;
    }
    .grid2{
        display:block;
        position:relative;

        .grid2Cell{
            max-width:20%;

            .icon{
                 max-width: 100%;
                 display:block;
                
            }

        }
    }
    
    .product{
        display: inline-block;
        position:relative;
        background-color: inherit;
        min-width: 100%;
        height:400px;
        
        .front , .back{
            display:inline-block;
            position:absolute;
            background-color:inherit;
            max-width:100%;
            max-height: 100%;
        }
    }

    .rotateTrigger{
        z-index: 10;
    }
    .rotateTrigger{
        display:inline-block;
        float:right;
        width:30px;
    }
    .description , .price{
        font-size: 1.8em;
    }
    .price{
        position:relative;
        display:inline-block;
        position:absolute;
        right:10px;
    }
    .description{
        position:absolute;
        left:10px;
    }

    @media (min-width: 765px) {
        .grid1Cell {
            width: 45%;
        }
        .description , .price{
            font-size: 1.5em;
        }
    }
    @media (min-width: 1024px) {
        .grid1Cell{
            width: 30%;
        }
        .description , .price{
            font-size: 1.2em;
        }
    }
}

.dropIn{
    display:inline-block;
    position:absolute;
    bottom:100%;
    background-color:$smoothBGColor;
    padding:15px;
    opacity:0;
}

.icon:hover ~ .dropIn{
    -webkit-animation: slideIn 1s ; 
    -webkit-animation-fill-mode: forwards;
}
.icon:not(:hover) ~ .dropIn{
    -webkit-animation: slideOut 1s; 
    -webkit-animation-fill-mode: forwards;
}
.dropIn:hover{
    -webkit-animation-play-state: paused !important;
    background: green;
    opacity:1;
    bottom:100%;
}
@-webkit-keyframes slideIn{
  0% {
    bottom: 140%;
    display:none;
    opacity:0;
  }
  100% {
    bottom: 100%;
    display:inline-block;
    opacity:1;
  }
}
@-webkit-keyframes slideOut{
  0% {
    display:inline-block;
    bottom: 100%;
    opacity:1;
  }
  100% {
    bottom: 140%;
    opacity:0;
    display:none;
  }
}


.rotateTrigger:checked ~ .product{
    -webkit-animation: rotate 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:checked ~ .product .front{
    -webkit-animation: hideFront 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:not(:checked) ~ .product{
    -webkit-animation: rotate1 1s; 
    -webkit-animation-fill-mode: forwards;
}
.rotateTrigger:not(:checked) ~ .product .front {
    -webkit-animation: showFront 1s; 
    -webkit-animation-fill-mode: forwards;
}

// @keyframes rotate 
@-webkit-keyframes rotate{
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
// and why cant I reuse an animation??
@-webkit-keyframes rotate1{
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
@-webkit-keyframes hideFront{
  0% {
    visibility: visible;
  }
  50% {
    visibility: visible;
  }
  51%{
    visibility: hidden;
  }
  100% {
    visibility: hidden;
  }
}
@-webkit-keyframes showFront{
  0% {
    visibility: hidden;
  }
  50% {
    visibility: hidden;
  }
  51%{
    visibility: visible;
  }
  100% {
    visibility: visible;
  }
}


